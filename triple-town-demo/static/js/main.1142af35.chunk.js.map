{"version":3,"sources":["utility.js","input-parser.js","game-config.js","game-logic.js","Game.js","serviceWorker.js","index.js","Toast.js"],"names":["ErrorMessage","Error","makeClassName","list","arg","a","Array","isArray","concat","name","push","join","splitInt","str","split","map","parseInt","config","reaction","minCount","scoring","build","bomb","ratio","Cell","x","y","value","this","Grid","data","cells","row","cell","length","GameState","score","numBuilt","numStars","numBombs","grid","command","targetType","vectors","queue","head","dx","dy","x2","y2","some","inBound","type","before","after","target","phase","info","checkReaction","putStructure","getStarType","toJSON","BoardCell","props","isPreview","classNames","className","onMouseOver","onHover","onMouseOut","onMouseUp","evt","onClick","onContextMenu","preventDefault","React","Component","Board","key","boardCells","renderCell","boardRows","renderRow","ToolButton","selected","title","amount","classes","active","disabled","Game","state","loaded","toasts","width","height","buildQueue","history","stepNumber","selectedTools","hover","hoverType","fileInput","createRef","handleHover","bind","handleClick","handleKeyDown","handleHistoryHover","document","addEventListener","removeEventListener","files","current","reader","FileReader","readAsText","onload","result","rawData","lines","trim","filter","slice","parseInputFile","err","Toast","console","error","log","loadedFilename","loadGame","onerror","gameState","setState","tool","index","button","reverse","ctrlKey","which","text","textarea","createElement","body","appendChild","select","execCommand","remove","copyText","exportCommands","filename","blob","Blob","url","URL","createObjectURL","href","download","append","click","removeChild","revokeObjectURL","saveTextAsFile","replace","currentStep","clone","toolName","putStar","putBomb","message","item","preview","temp","getToolPreview","getDisplayState","toolButtons","indexOf","handleToolSelect","historyItems","queueItems","numCut","start","ref","handleFileSelect","renderGameUI","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","ToastItem","show","setImmediate","in","timeout","onExited","onFadeOut","unmountOnExit","ToastContainer","timeouts","Set","triggerRef","forEach","id","clearTimeout","callback","elapse","setTimeout","delete","add","charset","Date","now","fill","Math","floor","random","toast","generateToastId","createTimeout","toastItems","container","dom"],"mappings":"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","file":"static/js/main.1142af35.chunk.js","sourcesContent":["\r\nexport class ErrorMessage extends Error { };\r\n\r\nexport function makeClassName(...arg) {\r\n  let list = [];\r\n  for (let a of arg) {\r\n    if (!a) continue;\r\n    if (Array.isArray(a)) {\r\n      list = list.concat(a);\r\n    } else if (typeof a === 'object') {\r\n      for (let name in a) {\r\n        if (a[name]) list.push(name);\r\n      }\r\n    } else {\r\n      list.push(a);\r\n    }\r\n  }\r\n  return list.join(' ');\r\n}\r\n\r\nexport function copyText(text) {\r\n  var textarea = document.createElement('textarea');\r\n  textarea.value = text;\r\n  document.body.appendChild(textarea);\r\n  textarea.select();\r\n  document.execCommand('copy');\r\n  textarea.remove();\r\n}\r\n\r\nexport function saveTextAsFile(filename, text) {\r\n  var blob = new Blob([text]);\r\n  var url = URL.createObjectURL(blob, { type: 'text/plain' });\r\n  var a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = filename;\r\n  document.body.append(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n}\r\n","\r\nfunction splitInt(str) {\r\n  return str.split(' ').map(a => parseInt(a));\r\n}\r\n\r\nexport default function parseInputFile(rawData) {\r\n  let lines = rawData.split(/\\r?\\n/).map(a => a.trim()).filter(a => a.length > 0);\r\n\r\n  let [height, width] = splitInt(lines[0]);\r\n  let [numStars, numBombs] = splitInt(lines[1]);\r\n  let grid = lines.slice(2, 2 + height).map(row => {\r\n    return row.split('').map(cell => cell === '.' ? null : parseInt(cell));\r\n  });\r\n  let queue = lines[2 + height] === '0' ? [] : splitInt(lines[3 + height]);\r\n\r\n  return {\r\n    width, height,\r\n    numStars, numBombs,\r\n    grid, queue\r\n  };\r\n}\r\n","\r\nconst config = {\r\n  reaction: {\r\n    minCount: 3\r\n  },\r\n  scoring: {\r\n    build: [null, 4, 20, 100, 500, 1500, 5000, 2e4, 1e5, 5e5],\r\n    bomb: {\r\n      ratio: 0.5\r\n    }\r\n  }\r\n};\r\n\r\nexport default config;\r\n","\r\nimport config from './game-config';\r\nimport { ErrorMessage } from './utility';\r\n\r\nclass Cell {\r\n  constructor(x, y, value) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.value = value;\r\n  }\r\n}\r\n\r\nclass Grid {\r\n  constructor(data) {\r\n    this.cells = data.map((row, x) => row.map((cell, y) => {\r\n      return new Cell(x, y, cell);\r\n    }));\r\n  }\r\n\r\n  inBound(x, y) {\r\n    return x >= 0 && y >= 0 && x < this.cells.length && y < this.cells[x].length;\r\n  }\r\n\r\n  toJSON() {\r\n    return this.cells.map(row => row.map(cell => cell.value));\r\n  }\r\n}\r\n\r\nexport class GameState {\r\n  constructor({ score, numBuilt, numStars, numBombs, grid, command }) {\r\n    this.score = score;\r\n    this.numBuilt = numBuilt;\r\n    this.numStars = numStars;\r\n    this.numBombs = numBombs;\r\n    this.grid = new Grid(grid);\r\n    this.command = command;\r\n  }\r\n\r\n  checkReaction(x, y, targetType) {\r\n    if (targetType === 9) return null;\r\n    const vectors = [[1, 0], [-1, 0], [0, 1], [0, -1]];\r\n    const queue = [[x, y]];\r\n    for (let head = 0; head < queue.length; ++head) {\r\n      const [x, y] = queue[head];\r\n      for (const [dx, dy] of vectors) {\r\n        const x2 = x + dx, y2 = y + dy;\r\n        if (!queue.some(([x, y]) => x === x2 && y === y2) &&\r\n            this.grid.inBound(x2, y2) &&\r\n            this.grid.cells[x2][y2].value === targetType) {\r\n          queue.push([x2, y2]);\r\n        }\r\n      }\r\n    }\r\n    if (queue.length >= config.reaction.minCount) {\r\n      return {\r\n        type: {\r\n          before: targetType,\r\n          after: targetType + 1\r\n        },\r\n        cells: queue\r\n      };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  putStructure(target, type) {\r\n    target.value = type;\r\n    this.score += config.scoring.build[type];\r\n    let phase = [];\r\n    while (true) {\r\n      let info = this.checkReaction(target.x, target.y, target.value);\r\n      if (!info) break;\r\n      phase.push(info);\r\n      for (let [x, y] of info.cells) {\r\n        this.grid.cells[x][y].value = null;\r\n      }\r\n      target.value = info.type.after;\r\n      this.score += config.scoring.build[info.type.after];\r\n    }\r\n    return { phase };\r\n  }\r\n\r\n  build(x, y, type) {\r\n    let target = this.grid.cells[x][y];\r\n    if (target.value) {\r\n      throw new ErrorMessage(\"You can't put structures here, since it's not empty.\");\r\n    }\r\n    this.command = `PUT ${x + 1} ${y + 1}`;\r\n    ++this.numBuilt;\r\n    return this.putStructure(target, type);\r\n  }\r\n\r\n  getStarType(x, y) {\r\n    for (let type = 9; type > 1; --type) {\r\n      if (this.checkReaction(x, y, type)) return type;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  putStar(x, y) {\r\n    if (!this.numStars) {\r\n      throw new ErrorMessage(\"You don't have any stars left.\");\r\n    }\r\n    let target = this.grid.cells[x][y];\r\n    if (target.value) {\r\n      throw new ErrorMessage(\"You can't put stars here, since it's not empty.\");\r\n    }\r\n    this.command = `STAR ${x + 1} ${y + 1}`;\r\n    --this.numStars;\r\n    const type = this.getStarType(x, y);\r\n    return this.putStructure(target, type);\r\n  }\r\n\r\n  putBomb(x, y) {\r\n    if (!this.numBombs) {\r\n      throw new ErrorMessage(\"You don't have any bombers left.\");\r\n    }\r\n    let target = this.grid.cells[x][y];\r\n    if (!target.value) {\r\n      throw new ErrorMessage(\"You can't put bombers here, since it's empty.\");\r\n    }\r\n    this.command = `BOMBER ${x + 1} ${y + 1}`;\r\n    --this.numBombs;\r\n    const { bomb: { ratio }, build } = config.scoring;\r\n    const type = target.value;\r\n    this.score -= ratio * build[type];\r\n    target.value = null;\r\n    return { type };\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      score: this.score,\r\n      numBuilt: this.numBuilt,\r\n      numStars: this.numStars,\r\n      numBombs: this.numBombs,\r\n      grid: this.grid.toJSON(),\r\n      command: this.command\r\n    };\r\n  }\r\n\r\n  clone() {\r\n    return new GameState(this.toJSON());\r\n  }\r\n}\r\n","import React from 'react';\nimport './Game.css';\n\nimport { makeClassName, ErrorMessage, copyText, saveTextAsFile } from \"./utility\";\nimport parseInputFile from \"./input-parser\";\nimport { GameState } from \"./game-logic\";\nimport Toast from './Toast';\n\nclass BoardCell extends React.Component {\n  render() {\n    const cell = this.props.cell;\n    const { x, y, value, isPreview, reaction } = cell;\n    const classNames = [];\n\n    classNames.push(value ? value : 'empty');\n    if (isPreview) classNames.push('preview');\n    if (reaction) classNames.push('reaction');\n\n    return (\n      <div\n        className={makeClassName('board-cell', classNames.map(a => 'board-cell-' + a))}\n        onMouseOver={() => this.props.onHover({ x, y })}\n        onMouseOut={() => this.props.onHover(null)}\n        onMouseUp={(evt) => this.props.onClick(cell, evt)}\n        onContextMenu={(evt) => evt.preventDefault()}\n      >\n        <span>{value}</span>\n      </div>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  renderCell(cell) {\n    const { x, y } = cell;\n\n    return (\n      <BoardCell\n        key={`${x},${y}`}\n        cell={cell}\n        onHover={this.props.onHover}\n        onClick={this.props.onClick}\n      />\n    );\n  }\n\n  renderRow(row, x) {\n    const boardCells = row.map(cell => this.renderCell(cell));\n    return (\n      <div className=\"board-row\" key={x}>\n        {boardCells}\n      </div>\n    );\n  }\n\n  render() {\n    const boardRows = this.props.grid.cells.map((row, x) => this.renderRow(row, x));\n    return (\n      <div>\n        {boardRows}\n      </div>\n    );\n  }\n}\n\nclass ToolButton extends React.Component {\n  render() {\n    const { selected, title, amount } = this.props;\n    const classes = {\n      active: selected === 0,\n      'active-second': selected === 1,\n      disabled: amount === 0\n    };\n\n    return (\n      <div\n        className={makeClassName(\"game-tool-btn\", classes)}\n        onMouseUp={(evt) => this.props.onClick(evt)}\n        onContextMenu={(evt) => evt.preventDefault()}\n      >\n        <strong className=\"title\">{title}</strong>\n        <span className=\"amount\">{amount}</span>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      toasts: [],\n      width: 0,\n      height: 0,\n      buildQueue: [],\n      history: [],\n      stepNumber: 0,\n      selectedTools: ['build', 'star'],\n      hover: null,\n      hoverType: ''\n    };\n    this.fileInput = React.createRef();\n    this.handleHover = this.handleHover.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleHistoryHover = this.handleHistoryHover.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  /**\n   * @returns {GameState}\n   */\n  get currentStep() {\n    return this.state.history[this.state.stepNumber];\n  }\n\n  handleFileSelect() {\n    let files = this.fileInput.current.files;\n    if (files.length === 0) {\n      Toast(\"No input file was selected.\");\n      return;\n    }\n    let reader = new FileReader();\n    reader.readAsText(files[0]);\n    reader.onload = () => {\n      let result;\n      try {\n        result = parseInputFile(reader.result);\n      } catch (err) {\n        Toast(\"Failed to parse input file.\");\n        console.error(err);\n        return;\n      }\n      console.log(result);\n      this.loadedFilename = files[0].name;\n      this.loadGame(result);\n    };\n    reader.onerror = () => {\n      Toast(\"Failed to read input file.\");\n    };\n  }\n\n  loadGame({ width, height, numStars, numBombs, grid, queue }) {\n    const gameState = new GameState({\n      score: 0, numBuilt: 0,\n      numStars, numBombs, grid,\n      command: null\n    });\n\n    this.setState({\n      loaded: true,\n      width, height,\n      buildQueue: queue,\n      history: [gameState],\n      stepNumber: 0\n    });\n  }\n\n  handleToolSelect(tool, evt) {\n    let index = evt.button === 0 ? 0 : 1;\n    let list = this.state.selectedTools.slice(0);\n    if (list[1 - index] === tool) {\n      list.reverse();\n    } else {\n      list[index] = tool;\n    }\n    this.setState({ selectedTools: list });\n  }\n\n  exportCommands() {\n    return this.state.history.slice(1, this.state.stepNumber + 1).map(state => state.command);\n  }\n\n  handleKeyDown(evt) {\n    if (!this.state.loaded) return;\n    if (evt.ctrlKey && evt.which === 90) { // Ctrl+Z: undo\n      const stepNumber = this.state.stepNumber;\n      if (stepNumber > 0) {\n        this.setState({ stepNumber: stepNumber - 1 });\n      } else {\n        Toast(\"No operation can be undone.\");\n      }\n    }\n    if (evt.ctrlKey && evt.which === 89) { // Ctrl+Y: redo\n      const stepNumber = this.state.stepNumber;\n      if (stepNumber < this.state.history.length - 1) {\n        this.setState({ stepNumber: stepNumber + 1 });\n      } else {\n        Toast(\"No operation can be redone.\");\n      }\n    }\n    if (evt.ctrlKey && evt.which === 67) { // Ctrl+C: copy\n      evt.preventDefault();\n      if (this.state.stepNumber > 0) {\n        copyText(this.exportCommands().concat('').join('\\n'));\n        Toast(\"Commands have been copied to clipboard.\");\n      } else {\n        Toast(\"No command can be copied.\");\n      }\n    }\n    if (evt.ctrlKey && evt.which === 83) { // Ctrl+S: save\n      evt.preventDefault();\n      saveTextAsFile(this.loadedFilename.replace('.in', '.out'), this.exportCommands().concat('END', '').join('\\n'));\n      Toast(\"Output file has been saved.\");\n    }\n  }\n\n  handleHover(cell) {\n    this.setState({ hover: cell, hoverType: 'cell' });\n  }\n\n  handleClick(cell, evt) {\n    const { x, y } = cell;\n\n    let history = this.state.history;\n    let stepNumber = this.state.stepNumber;\n    let current = this.currentStep.clone();\n\n    try {\n      let toolName = this.state.selectedTools[evt.button === 0 ? 0 : 1];\n\n      switch (toolName) {\n        case 'build': {\n          const queue = this.state.buildQueue;\n          if (current.numBuilt === queue.length) {\n            throw new ErrorMessage(\"You have no structure left to build.\");\n          }\n\n          let result = current.build(x, y, queue[current.numBuilt]);\n          // todo: animation\n          console.log(result);\n          break;\n        }\n\n        case 'star':\n          current.putStar(x, y);\n          break;\n\n        case 'bomb':\n          current.putBomb(x, y);\n          break;\n\n        default:\n          throw new Error(\"Unknown tool: \" + toolName);\n      }\n    } catch (err) {\n      if (err instanceof ErrorMessage) {\n        Toast(err.message);\n      } else {\n        Toast(\"An unexpected error occured.\");\n        console.error(err);\n      }\n      return;\n    }\n\n    history = history.slice(0, ++stepNumber).concat(current);\n    this.setState({ history, stepNumber });\n  }\n\n  handleHistoryHover(item) {\n    this.setState({ hover: item, hoverType: 'history' });\n  }\n\n  /**\n   * @param {GameState} current\n   * @param {String} too\n   * @param {*} coord\n   */\n  getToolPreview(current, tool, { x, y }) {\n    const cell = current.grid.cells[x][y];\n\n    switch (tool) {\n      case 'build': {\n        const queue = this.state.buildQueue;\n        if (current.numBuilt < queue.length && !cell.value) {\n          const preview = current.clone();\n          const target = preview.grid.cells[x][y];\n          const type = queue[current.numBuilt];\n          const temp = current.clone();\n          const result = temp.build(x, y, type);\n          for (const { cells } of result.phase) {\n            for (const [x, y] of cells) {\n              preview.grid.cells[x][y].reaction = true;\n            }\n          }\n          target.value = temp.grid.cells[x][y].value;\n          target.isPreview = true;\n          return preview;\n        }\n        break;\n      }\n\n      case 'star': {\n        if (current.numStars && !cell.value) {\n          const preview = current.clone();\n          const target = preview.grid.cells[x][y];\n          const temp = current.clone();\n          const result = temp.putStar(x, y);\n          for (const { cells } of result.phase) {\n            for (const [x, y] of cells) {\n              preview.grid.cells[x][y].reaction = true;\n            }\n          }\n          target.value = temp.grid.cells[x][y].value;\n          target.isPreview = true;\n          return preview;\n        }\n        break;\n      }\n\n      case 'bomb': break;\n    }\n\n    return current;\n  }\n\n  getDisplayState() {\n    const { hover, hoverType } = this.state;\n    const current = this.currentStep;\n\n    if (!hover) return current;\n\n    switch (hoverType) {\n      case 'cell':\n        return this.getToolPreview(current, this.state.selectedTools[0], hover);\n      \n      case 'history':\n        return hover;\n      \n      default:\n        throw new Error('Unknown hover type.');\n    }\n  }\n\n  renderGameUI() {\n    const history = this.state.history;\n    const queue = this.state.buildQueue;\n    const current = this.getDisplayState();\n\n    const toolButtons = [\n      {\n        name: 'build', title: 'Build',\n        amount: this.state.buildQueue.length - current.numBuilt\n      },\n      {\n        name: 'star', title: 'Star',\n        amount: current.numStars\n      },\n      {\n        name: 'bomb', title: 'Bomber',\n        amount: current.numBombs\n      }\n    ].map(({ name, title, amount }) => {\n      return (\n        <ToolButton\n          key={name}\n          title={title}\n          amount={amount}\n          selected={this.state.selectedTools.indexOf(name)}\n          onClick={(evt) => this.handleToolSelect(name, evt)}\n        />\n      );\n    });\n\n    const historyItems = history.map((item, index) => {\n      return (\n        <li\n          key={index}\n          className={index === this.state.stepNumber ? \"active\" : \"\"}\n          onMouseOver={() => this.handleHistoryHover(item)}\n          onMouseOut={() => this.handleHistoryHover(null)}\n          onClick={() => this.setState({ stepNumber: index })}\n        >\n          {item.command || 'Start'}\n        </li>\n      );\n    });\n\n    const maxQueueLength = 40;\n    let queueItems = this.state.buildQueue.slice(current.numBuilt);\n    if (queueItems.length > maxQueueLength) {\n      let numCut = queueItems.length - maxQueueLength;\n      queueItems = queueItems.slice(0, maxQueueLength).concat(`... (${numCut} more)`);\n    }\n    if (queueItems.length) {\n      queueItems = [\n        <strong key=\"first\">{queueItems[0]} </strong>,\n        <span key=\"other\">{queueItems.slice(1).join(' ')}</span>\n      ]; \n    } else {\n      queueItems = <span>(queue empty)</span>;\n    }\n\n    return (\n      <div className=\"game\">\n        <div>\n          <div className=\"game-toolbar\">\n            {toolButtons}\n          </div>\n        </div>\n        <div>\n          <div className=\"game-queue\">\n            {queueItems}\n          </div>\n        </div>\n        <div>\n          <div className=\"game-board\">\n            <Board\n              grid={current.grid}\n              onHover={this.handleHover}\n              onClick={this.handleClick}\n            />\n          </div>\n          <div className=\"game-info\">\n            <ul>\n              <li>Board: {this.state.width} x {this.state.height}</li>\n              <li>Round: {this.state.stepNumber}</li>\n              <li>Score: {current.score}</li>\n              <li>Queue: {current.numBuilt} / {queue.length}</li>\n              <li>Stars: {current.numStars}</li>\n              <li>Bombers: {current.numBombs}</li>\n            </ul>\n          </div>\n          <div className=\"game-history\">\n            <ol start=\"0\">\n              {historyItems}\n            </ol>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"game-file-select\">\n          <input type=\"file\" ref={this.fileInput} />\n          <input type=\"button\" value=\"Start\" onClick={() => this.handleFileSelect()} />\n        </div>\n        {this.state.loaded && this.renderGameUI()}\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport \"./Toast.css\";\r\n\r\nconst config = {\r\n  displayTime: 4000,\r\n  fadeTime: 800\r\n};\r\n\r\nclass ToastItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false\r\n    };\r\n    setImmediate(() => {\r\n      this.setState({ show: true });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CSSTransition\r\n        in={this.state.show && this.props.show}\r\n        classNames=\"toast\"\r\n        timeout={config.fadeTime}\r\n        onExited={this.props.onFadeOut}\r\n        unmountOnExit>\r\n        <div className=\"toast-item\">\r\n          {this.props.message}\r\n        </div>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n\r\nclass ToastContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toasts: []\r\n    };\r\n    this.timeouts = new Set();\r\n    props.triggerRef(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.timeouts.forEach(id => clearTimeout(id));\r\n  }\r\n\r\n  createTimeout(callback, elapse) {\r\n    let id = setTimeout(() => {\r\n      this.timeouts.delete(id);\r\n      callback();\r\n    }, elapse);\r\n    this.timeouts.add(id);\r\n    return id;\r\n  }\r\n\r\n  generateToastId() {\r\n    const charset = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n    return [\r\n      Date.now(),\r\n      new Array(8).fill(0).map(() => charset[Math.floor(Math.random() * charset.length)]).join('')\r\n    ].join('-');\r\n  }\r\n\r\n  push(message) {\r\n    let toast = {\r\n      id: this.generateToastId(),\r\n      message, show: true\r\n    };\r\n    this.setState(state => {\r\n      return { toasts: state.toasts.concat(toast) };\r\n    });\r\n    this.createTimeout(() => {\r\n      toast.show = false;\r\n      this.setState({ toasts: this.state.toasts });\r\n    }, config.displayTime);\r\n  }\r\n\r\n  remove(id) {\r\n    this.setState(state => {\r\n      return {\r\n        toasts: state.toasts.filter(toast => toast.id !== id)\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const toastItems = this.state.toasts.map(toast => (\r\n      <ToastItem\r\n        key={toast.id}\r\n        message={toast.message}\r\n        show={toast.show}\r\n        onFadeOut={() => this.remove(toast.id)}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"toast-container\">\r\n        {toastItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (() => {\r\n  const dom = document.createElement('div');\r\n  document.body.appendChild(dom);\r\n\r\n  let container;\r\n\r\n  ReactDOM.render(\r\n    <ToastContainer\r\n      triggerRef={ref => container = ref}\r\n    />, dom);\r\n\r\n  return function (message) {\r\n    container.push(message);\r\n  };\r\n})();\r\n"],"sourceRoot":""}