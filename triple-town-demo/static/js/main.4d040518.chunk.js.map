{"version":3,"sources":["Toast.js","utility.js","input-parser.js","game-config.js","game-logic.js","Game.js","serviceWorker.js","index.js"],"names":["config","ToastItem","props","state","show","setImmediate","setState","in","this","classNames","timeout","onExited","onFadeOut","unmountOnExit","className","message","React","Component","ToastContainer","toasts","timeouts","Set","triggerRef","forEach","id","clearTimeout","callback","elapse","setTimeout","delete","add","charset","Date","now","Array","fill","map","Math","floor","random","length","join","toast","generateToastId","concat","createTimeout","filter","toastItems","key","remove","container","dom","document","createElement","body","appendChild","ReactDOM","render","ref","push","ErrorMessage","Error","makeClassName","list","arg","a","isArray","name","splitInt","str","split","parseInt","reaction","minCount","scoring","build","bomb","ratio","Cell","x","y","value","Grid","data","cells","row","cell","GameState","score","numBuilt","numStars","numBombs","grid","command","targetType","vectors","queue","head","dx","dy","x2","y2","some","inBound","type","before","after","target","phase","info","checkReaction","putStructure","getStarType","toJSON","BoardCell","isPreview","onMouseOver","onHover","onMouseOut","onMouseUp","evt","onClick","onContextMenu","preventDefault","Board","boardCells","renderCell","boardRows","renderRow","ToolButton","selected","title","amount","classes","active","disabled","Game","loaded","width","height","buildQueue","history","stepNumber","selectedTools","hover","hoverType","fileInput","createRef","commandInput","handleHover","bind","handleClick","handleKeyDown","handleHistoryHover","handleCommandExec","handleCommandClear","addEventListener","removeEventListener","files","current","reader","FileReader","readAsText","onload","result","rawData","lines","trim","slice","parseInputFile","err","Toast","console","error","log","loadedFilename","loadGame","onerror","gameState","tool","index","button","reverse","ctrlKey","which","text","textarea","select","execCommand","copyText","exportCommands","filename","blob","Blob","url","URL","createObjectURL","href","download","append","click","removeChild","revokeObjectURL","saveTextAsFile","replace","currentStep","clone","toolName","buildWithin","putStar","putBomb","item","results","checkParams","params","Number","isInteger","lineNumber","cntCommands","line","toLowerCase","preview","temp","getToolPreview","getDisplayState","toolButtons","indexOf","handleToolSelect","historyItems","queueItems","numCut","start","rows","cols","onMouseDown","readOnly","onBlur","onKeyDown","nativeEvent","stopImmediatePropagation","handleFileSelect","renderGameUI","Boolean","window","location","hostname","match","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4d040518.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport \"./Toast.css\";\r\n\r\nconst config = {\r\n  displayTime: 4000,\r\n  fadeTime: 800\r\n};\r\n\r\nclass ToastItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false\r\n    };\r\n    setImmediate(() => {\r\n      this.setState({ show: true });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CSSTransition\r\n        in={this.state.show && this.props.show}\r\n        classNames=\"toast\"\r\n        timeout={config.fadeTime}\r\n        onExited={this.props.onFadeOut}\r\n        unmountOnExit>\r\n        <div className=\"toast-item\">\r\n          {this.props.message}\r\n        </div>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n\r\nclass ToastContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toasts: []\r\n    };\r\n    this.timeouts = new Set();\r\n    props.triggerRef(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.timeouts.forEach(id => clearTimeout(id));\r\n  }\r\n\r\n  createTimeout(callback, elapse) {\r\n    let id = setTimeout(() => {\r\n      this.timeouts.delete(id);\r\n      callback();\r\n    }, elapse);\r\n    this.timeouts.add(id);\r\n    return id;\r\n  }\r\n\r\n  generateToastId() {\r\n    const charset = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n    return [\r\n      Date.now(),\r\n      new Array(8).fill(0).map(() => charset[Math.floor(Math.random() * charset.length)]).join('')\r\n    ].join('-');\r\n  }\r\n\r\n  push(message) {\r\n    let toast = {\r\n      id: this.generateToastId(),\r\n      message, show: true\r\n    };\r\n    this.setState(state => {\r\n      return { toasts: state.toasts.concat(toast) };\r\n    });\r\n    this.createTimeout(() => {\r\n      toast.show = false;\r\n      this.setState({ toasts: this.state.toasts });\r\n    }, config.displayTime);\r\n  }\r\n\r\n  remove(id) {\r\n    this.setState(state => {\r\n      return {\r\n        toasts: state.toasts.filter(toast => toast.id !== id)\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const toastItems = this.state.toasts.map(toast => (\r\n      <ToastItem\r\n        key={toast.id}\r\n        message={toast.message}\r\n        show={toast.show}\r\n        onFadeOut={() => this.remove(toast.id)}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"toast-container\">\r\n        {toastItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (() => {\r\n  const dom = document.createElement('div');\r\n  document.body.appendChild(dom);\r\n\r\n  let container;\r\n\r\n  ReactDOM.render(\r\n    <ToastContainer\r\n      triggerRef={ref => container = ref}\r\n    />, dom);\r\n\r\n  return function (message) {\r\n    container.push(message);\r\n  };\r\n})();\r\n","\r\nexport class ErrorMessage extends Error { };\r\n\r\nexport function makeClassName(...arg) {\r\n  let list = [];\r\n  for (let a of arg) {\r\n    if (!a) continue;\r\n    if (Array.isArray(a)) {\r\n      list = list.concat(a);\r\n    } else if (typeof a === 'object') {\r\n      for (let name in a) {\r\n        if (a[name]) list.push(name);\r\n      }\r\n    } else {\r\n      list.push(a);\r\n    }\r\n  }\r\n  return list.join(' ');\r\n}\r\n\r\nexport function copyText(text) {\r\n  var textarea = document.createElement('textarea');\r\n  textarea.value = text;\r\n  document.body.appendChild(textarea);\r\n  textarea.select();\r\n  document.execCommand('copy');\r\n  textarea.remove();\r\n}\r\n\r\nexport function saveTextAsFile(filename, text) {\r\n  var blob = new Blob([text]);\r\n  var url = URL.createObjectURL(blob, { type: 'text/plain' });\r\n  var a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = filename;\r\n  document.body.append(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n}\r\n","\r\nfunction splitInt(str) {\r\n  return str.split(' ').map(a => parseInt(a));\r\n}\r\n\r\nexport default function parseInputFile(rawData) {\r\n  let lines = rawData.split(/\\r?\\n/).map(a => a.trim()).filter(a => a.length > 0);\r\n\r\n  let [height, width] = splitInt(lines[0]);\r\n  let [numStars, numBombs] = splitInt(lines[1]);\r\n  let grid = lines.slice(2, 2 + height).map(row => {\r\n    return row.split('').map(cell => cell === '.' ? null : parseInt(cell));\r\n  });\r\n  let queue = lines[2 + height] === '0' ? [] : splitInt(lines[3 + height]);\r\n\r\n  return {\r\n    width, height,\r\n    numStars, numBombs,\r\n    grid, queue\r\n  };\r\n}\r\n","\r\nconst config = {\r\n  reaction: {\r\n    minCount: 3\r\n  },\r\n  scoring: {\r\n    build: [null, 4, 20, 100, 500, 1500, 5000, 2e4, 1e5, 5e5],\r\n    bomb: {\r\n      ratio: 0.5\r\n    }\r\n  }\r\n};\r\n\r\nexport default config;\r\n","\r\nimport config from './game-config';\r\nimport { ErrorMessage } from './utility';\r\n\r\nclass Cell {\r\n  constructor(x, y, value) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.value = value;\r\n  }\r\n}\r\n\r\nclass Grid {\r\n  constructor(data) {\r\n    this.cells = data.map((row, x) => row.map((cell, y) => {\r\n      return new Cell(x, y, cell);\r\n    }));\r\n  }\r\n\r\n  inBound(x, y) {\r\n    return x >= 0 && y >= 0 && x < this.cells.length && y < this.cells[x].length;\r\n  }\r\n\r\n  toJSON() {\r\n    return this.cells.map(row => row.map(cell => cell.value));\r\n  }\r\n}\r\n\r\nexport class GameState {\r\n  constructor({ score, numBuilt, numStars, numBombs, grid, command }) {\r\n    this.score = score;\r\n    this.numBuilt = numBuilt;\r\n    this.numStars = numStars;\r\n    this.numBombs = numBombs;\r\n    this.grid = new Grid(grid);\r\n    this.command = command;\r\n  }\r\n\r\n  checkReaction(x, y, targetType) {\r\n    if (targetType === 9) return null;\r\n    const vectors = [[1, 0], [-1, 0], [0, 1], [0, -1]];\r\n    const queue = [[x, y]];\r\n    for (let head = 0; head < queue.length; ++head) {\r\n      const [x, y] = queue[head];\r\n      for (const [dx, dy] of vectors) {\r\n        const x2 = x + dx, y2 = y + dy;\r\n        if (!queue.some(([x, y]) => x === x2 && y === y2) &&\r\n            this.grid.inBound(x2, y2) &&\r\n            this.grid.cells[x2][y2].value === targetType) {\r\n          queue.push([x2, y2]);\r\n        }\r\n      }\r\n    }\r\n    if (queue.length >= config.reaction.minCount) {\r\n      return {\r\n        type: {\r\n          before: targetType,\r\n          after: targetType + 1\r\n        },\r\n        cells: queue\r\n      };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  putStructure(target, type) {\r\n    target.value = type;\r\n    this.score += config.scoring.build[type];\r\n    let phase = [];\r\n    while (true) {\r\n      let info = this.checkReaction(target.x, target.y, target.value);\r\n      if (!info) break;\r\n      phase.push(info);\r\n      for (let [x, y] of info.cells) {\r\n        this.grid.cells[x][y].value = null;\r\n      }\r\n      target.value = info.type.after;\r\n      this.score += config.scoring.build[info.type.after];\r\n    }\r\n    return { phase };\r\n  }\r\n\r\n  build(x, y, type) {\r\n    let target = this.grid.cells[x][y];\r\n    if (target.value) {\r\n      throw new ErrorMessage(\"You can't put structures here, since it's not empty.\");\r\n    }\r\n    this.command = `PUT ${x + 1} ${y + 1}`;\r\n    ++this.numBuilt;\r\n    return this.putStructure(target, type);\r\n  }\r\n\r\n  getStarType(x, y) {\r\n    for (let type = 9; type > 1; --type) {\r\n      if (this.checkReaction(x, y, type)) return type;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  putStar(x, y) {\r\n    if (!this.numStars) {\r\n      throw new ErrorMessage(\"You don't have any stars left.\");\r\n    }\r\n    let target = this.grid.cells[x][y];\r\n    if (target.value) {\r\n      throw new ErrorMessage(\"You can't put stars here, since it's not empty.\");\r\n    }\r\n    this.command = `STAR ${x + 1} ${y + 1}`;\r\n    --this.numStars;\r\n    const type = this.getStarType(x, y);\r\n    return this.putStructure(target, type);\r\n  }\r\n\r\n  putBomb(x, y) {\r\n    if (!this.numBombs) {\r\n      throw new ErrorMessage(\"You don't have any bombers left.\");\r\n    }\r\n    let target = this.grid.cells[x][y];\r\n    if (!target.value) {\r\n      throw new ErrorMessage(\"You can't put bombers here, since it's empty.\");\r\n    }\r\n    this.command = `BOMBER ${x + 1} ${y + 1}`;\r\n    --this.numBombs;\r\n    const { bomb: { ratio }, build } = config.scoring;\r\n    const type = target.value;\r\n    this.score -= ratio * build[type];\r\n    target.value = null;\r\n    return { type };\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      score: this.score,\r\n      numBuilt: this.numBuilt,\r\n      numStars: this.numStars,\r\n      numBombs: this.numBombs,\r\n      grid: this.grid.toJSON(),\r\n      command: this.command\r\n    };\r\n  }\r\n\r\n  clone() {\r\n    return new GameState(this.toJSON());\r\n  }\r\n}\r\n","import React from 'react';\nimport './Game.css';\n\nimport { makeClassName, ErrorMessage, copyText, saveTextAsFile } from \"./utility\";\nimport parseInputFile from \"./input-parser\";\nimport { GameState } from \"./game-logic\";\nimport Toast from './Toast';\n\nclass BoardCell extends React.Component {\n  render() {\n    const cell = this.props.cell;\n    const { x, y, value, isPreview, reaction } = cell;\n    const classNames = [];\n\n    classNames.push(value ? value : 'empty');\n    if (isPreview) classNames.push('preview');\n    if (reaction) classNames.push('reaction');\n\n    return (\n      <div\n        className={makeClassName('board-cell', classNames.map(a => 'board-cell-' + a))}\n        onMouseOver={() => this.props.onHover({ x, y })}\n        onMouseOut={() => this.props.onHover(null)}\n        onMouseUp={(evt) => this.props.onClick(cell, evt)}\n        onContextMenu={(evt) => evt.preventDefault()}\n      >\n        <span>{value}</span>\n      </div>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  renderCell(cell) {\n    const { x, y } = cell;\n\n    return (\n      <BoardCell\n        key={`${x},${y}`}\n        cell={cell}\n        onHover={this.props.onHover}\n        onClick={this.props.onClick}\n      />\n    );\n  }\n\n  renderRow(row, x) {\n    const boardCells = row.map(cell => this.renderCell(cell));\n    return (\n      <div className=\"board-row\" key={x}>\n        {boardCells}\n      </div>\n    );\n  }\n\n  render() {\n    const boardRows = this.props.grid.cells.map((row, x) => this.renderRow(row, x));\n    return (\n      <div>\n        {boardRows}\n      </div>\n    );\n  }\n}\n\nclass ToolButton extends React.Component {\n  render() {\n    const { selected, title, amount } = this.props;\n    const classes = {\n      active: selected === 0,\n      'active-second': selected === 1,\n      disabled: amount === 0\n    };\n\n    return (\n      <div\n        className={makeClassName(\"game-tool-btn\", classes)}\n        onMouseUp={(evt) => this.props.onClick(evt)}\n        onContextMenu={(evt) => evt.preventDefault()}\n      >\n        <strong className=\"title\">{title}</strong>\n        <span className=\"amount\">{amount}</span>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      toasts: [],\n      width: 0,\n      height: 0,\n      buildQueue: [],\n      history: [],\n      stepNumber: 0,\n      selectedTools: ['build', 'star'],\n      hover: null,\n      hoverType: ''\n    };\n    this.fileInput = React.createRef();\n    this.commandInput = React.createRef();\n    this.handleHover = this.handleHover.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleHistoryHover = this.handleHistoryHover.bind(this);\n    this.handleCommandExec = this.handleCommandExec.bind(this);\n    this.handleCommandClear = this.handleCommandClear.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  /**\n   * @returns {GameState}\n   */\n  get currentStep() {\n    return this.state.history[this.state.stepNumber];\n  }\n\n  handleFileSelect() {\n    let files = this.fileInput.current.files;\n    if (files.length === 0) {\n      Toast(\"No input file was selected.\");\n      return;\n    }\n    let reader = new FileReader();\n    reader.readAsText(files[0]);\n    reader.onload = () => {\n      let result;\n      try {\n        result = parseInputFile(reader.result);\n      } catch (err) {\n        Toast(\"Failed to parse input file.\");\n        console.error(err);\n        return;\n      }\n      console.log(result);\n      this.loadedFilename = files[0].name;\n      this.loadGame(result);\n    };\n    reader.onerror = () => {\n      Toast(\"Failed to read input file.\");\n    };\n  }\n\n  loadGame({ width, height, numStars, numBombs, grid, queue }) {\n    const gameState = new GameState({\n      score: 0, numBuilt: 0,\n      numStars, numBombs, grid,\n      command: null\n    });\n\n    this.setState({\n      loaded: true,\n      width, height,\n      buildQueue: queue,\n      history: [gameState],\n      stepNumber: 0\n    });\n  }\n\n  handleToolSelect(tool, evt) {\n    let index = evt.button === 0 ? 0 : 1;\n    let list = this.state.selectedTools.slice(0);\n    if (list[1 - index] === tool) {\n      list.reverse();\n    } else {\n      list[index] = tool;\n    }\n    this.setState({ selectedTools: list });\n  }\n\n  exportCommands() {\n    return this.state.history.slice(1, this.state.stepNumber + 1).map(state => state.command);\n  }\n\n  handleKeyDown(evt) {\n    if (!this.state.loaded) return;\n    if (evt.ctrlKey && evt.which === 90) { // Ctrl+Z: undo\n      const stepNumber = this.state.stepNumber;\n      if (stepNumber > 0) {\n        this.setState({ stepNumber: stepNumber - 1 });\n      } else {\n        Toast(\"No operation can be undone.\");\n      }\n    }\n    if (evt.ctrlKey && evt.which === 89) { // Ctrl+Y: redo\n      const stepNumber = this.state.stepNumber;\n      if (stepNumber < this.state.history.length - 1) {\n        this.setState({ stepNumber: stepNumber + 1 });\n      } else {\n        Toast(\"No operation can be redone.\");\n      }\n    }\n    if (evt.ctrlKey && evt.which === 67) { // Ctrl+C: copy\n      evt.preventDefault();\n      if (this.state.stepNumber > 0) {\n        copyText(this.exportCommands().concat('').join('\\n'));\n        Toast(\"Commands have been copied to clipboard.\");\n      } else {\n        Toast(\"No command can be copied.\");\n      }\n    }\n    if (evt.ctrlKey && evt.which === 83) { // Ctrl+S: save\n      evt.preventDefault();\n      saveTextAsFile(this.loadedFilename.replace('.in', '.out'), this.exportCommands().concat('END', '').join('\\n'));\n      Toast(\"Output file has been saved.\");\n    }\n  }\n\n  handleHover(cell) {\n    this.setState({ hover: cell, hoverType: 'cell' });\n  }\n\n  buildWithin(current, x, y) {\n    const queue = this.state.buildQueue;\n    if (current.numBuilt === queue.length) {\n      throw new ErrorMessage(\"You have no structure left to build.\");\n    }\n    return current.build(x, y, queue[current.numBuilt]);\n  }\n\n  handleClick(cell, evt) {\n    const { x, y } = cell;\n\n    let history = this.state.history;\n    let stepNumber = this.state.stepNumber;\n    let current = this.currentStep.clone();\n\n    try {\n      let toolName = this.state.selectedTools[evt.button === 0 ? 0 : 1];\n\n      switch (toolName) {\n        case 'build': {\n          this.buildWithin(current, x, y);\n          break;\n        }\n\n        case 'star':\n          current.putStar(x, y);\n          break;\n\n        case 'bomb':\n          current.putBomb(x, y);\n          break;\n\n        default:\n          throw new Error(\"Unknown tool: \" + toolName);\n      }\n    } catch (err) {\n      if (err instanceof ErrorMessage) {\n        Toast(err.message);\n      } else {\n        Toast(\"An unexpected error occured.\");\n        console.error(err);\n      }\n      return;\n    }\n\n    history = history.slice(0, ++stepNumber).concat(current);\n    this.setState({ history, stepNumber });\n  }\n\n  handleHistoryHover(item) {\n    this.setState({ hover: item, hoverType: 'history' });\n  }\n\n  handleCommandExec() {\n    const lines = this.commandInput.current.value.split('\\n');\n\n    const { stepNumber, history } = this.state;\n    const results = [];\n    let current = this.currentStep;\n\n    function checkParams(params) {\n      if (params.length !== 2) {\n        throw new ErrorMessage('There should be exactly 2 params for this command.');\n      }\n      const [x, y] = params.map(a => {\n        a = Number(a);\n        if (!Number.isInteger(a)) throw new ErrorMessage('All params should be integers.');\n        return a - 1;\n      });\n      if (!current.grid.inBound(x, y)) throw new ErrorMessage('Coordinates out of range.');\n      return [x, y];\n    }\n\n    let lineNumber = 0, cntCommands = 0;\n\n    for (let line of lines) {\n      lineNumber++;\n      line = line.trim();\n      if (!line) continue;\n\n      cntCommands++;\n      const [command, ...params] = line.split(/\\s+/);\n\n      try {\n        current = current.clone();\n\n        switch (command.toLowerCase()) {\n          case 'put': {\n            const [x, y] = checkParams(params);\n            this.buildWithin(current, x, y);\n            break;\n          }\n          \n          case 'star': {\n            const [x, y] = checkParams(params);\n            current.putStar(x, y);\n            break;\n          }\n          \n          case 'bomber': {\n            const [x, y] = checkParams(params);\n            current.putBomb(x, y);\n            break;\n          }\n          \n          default:\n            throw new ErrorMessage(`Unknown command '${command}'.`);\n        }\n\n        results.push(current);\n      } catch (err) {\n        if (err instanceof ErrorMessage) {\n          Toast(`Error on line ${lineNumber}: ${err.message}\\nExecution was interrupted.`);\n          return;\n        } else {\n          Toast(`An unknown error occured when executing line ${lineNumber}.\\nChanges will be rolled back.`);\n          return;\n        }\n      }\n    }\n\n    if (cntCommands) {\n      Toast(`Success: ${cntCommands} command${cntCommands > 1 ? 's were' : ' was'} executed.`);\n    } else {\n      Toast('No command was found.');\n      return;\n    }\n\n    this.setState({\n      stepNumber: stepNumber + results.length,\n      history: history.slice(0, stepNumber + 1).concat(results)\n    });\n  }\n\n  handleCommandClear() {\n    this.commandInput.current.value = '';\n    Toast('Commands have been cleared.');\n  }\n\n  /**\n   * @param {GameState} current\n   * @param {String} too\n   * @param {*} coord\n   */\n  getToolPreview(current, tool, { x, y }) {\n    const cell = current.grid.cells[x][y];\n\n    switch (tool) {\n      case 'build': {\n        const queue = this.state.buildQueue;\n        if (current.numBuilt < queue.length && !cell.value) {\n          const preview = current.clone();\n          const target = preview.grid.cells[x][y];\n          const type = queue[current.numBuilt];\n          const temp = current.clone();\n          const result = temp.build(x, y, type);\n          for (const { cells } of result.phase) {\n            for (const [x, y] of cells) {\n              preview.grid.cells[x][y].reaction = true;\n            }\n          }\n          target.value = temp.grid.cells[x][y].value;\n          target.isPreview = true;\n          return preview;\n        }\n        break;\n      }\n\n      case 'star': {\n        if (current.numStars && !cell.value) {\n          const preview = current.clone();\n          const target = preview.grid.cells[x][y];\n          const temp = current.clone();\n          const result = temp.putStar(x, y);\n          for (const { cells } of result.phase) {\n            for (const [x, y] of cells) {\n              preview.grid.cells[x][y].reaction = true;\n            }\n          }\n          target.value = temp.grid.cells[x][y].value;\n          target.isPreview = true;\n          return preview;\n        }\n        break;\n      }\n\n      default: break;\n    }\n\n    return current;\n  }\n\n  getDisplayState() {\n    const { hover, hoverType } = this.state;\n    const current = this.currentStep;\n\n    if (!hover) return current;\n\n    switch (hoverType) {\n      case 'cell':\n        return this.getToolPreview(current, this.state.selectedTools[0], hover);\n      \n      case 'history':\n        return hover;\n      \n      default:\n        throw new Error('Unknown hover type.');\n    }\n  }\n\n  renderGameUI() {\n    const history = this.state.history;\n    const queue = this.state.buildQueue;\n    const current = this.getDisplayState();\n\n    const toolButtons = [\n      {\n        name: 'build', title: 'Build',\n        amount: this.state.buildQueue.length - current.numBuilt\n      },\n      {\n        name: 'star', title: 'Star',\n        amount: current.numStars\n      },\n      {\n        name: 'bomb', title: 'Bomber',\n        amount: current.numBombs\n      }\n    ].map(({ name, title, amount }) => {\n      return (\n        <ToolButton\n          key={name}\n          title={title}\n          amount={amount}\n          selected={this.state.selectedTools.indexOf(name)}\n          onClick={(evt) => this.handleToolSelect(name, evt)}\n        />\n      );\n    });\n\n    const historyItems = history.map((item, index) => {\n      return (\n        <li\n          key={index}\n          className={index === this.state.stepNumber ? \"active\" : \"\"}\n          onMouseOver={() => this.handleHistoryHover(item)}\n          onMouseOut={() => this.handleHistoryHover(null)}\n          onClick={() => this.setState({ stepNumber: index })}\n        >\n          {item.command || 'Start'}\n        </li>\n      );\n    });\n\n    const maxQueueLength = 40;\n    let queueItems = this.state.buildQueue.slice(current.numBuilt);\n    if (queueItems.length > maxQueueLength) {\n      let numCut = queueItems.length - maxQueueLength;\n      queueItems = queueItems.slice(0, maxQueueLength).concat(`... (${numCut} more)`);\n    }\n    if (queueItems.length) {\n      queueItems = [\n        <strong key=\"first\">{queueItems[0]} </strong>,\n        <span key=\"other\">{queueItems.slice(1).join(' ')}</span>\n      ]; \n    } else {\n      queueItems = <span>(queue empty)</span>;\n    }\n\n    return (\n      <div className=\"game\">\n        <div>\n          <div className=\"game-toolbar\">\n            {toolButtons}\n          </div>\n        </div>\n        <div>\n          <div className=\"game-queue\">\n            {queueItems}\n          </div>\n        </div>\n        <div>\n          <div className=\"game-board\">\n            <Board\n              grid={current.grid}\n              onHover={this.handleHover}\n              onClick={this.handleClick}\n            />\n          </div>\n          <div className=\"game-info\">\n            <ul>\n              <li>Board: {this.state.width} x {this.state.height}</li>\n              <li>Round: {this.state.stepNumber}</li>\n              <li>Score: {current.score}</li>\n              <li>Queue: {current.numBuilt} / {queue.length}</li>\n              <li>Stars: {current.numStars}</li>\n              <li>Bombers: {current.numBombs}</li>\n            </ul>\n          </div>\n          <div className=\"game-history\">\n            <ol start=\"0\">\n              {historyItems}\n            </ol>\n          </div>\n          <div className=\"game-command-input\">\n            <div>\n              <textarea\n                rows=\"15\"\n                cols=\"15\"\n                ref={this.commandInput}\n                onMouseDown={(evt) => evt.target.readOnly = false}\n                onBlur={(evt) => evt.target.readOnly = true} // Fix auto focus\n                onKeyDown={(evt) => evt.nativeEvent.stopImmediatePropagation()}\n              ></textarea>\n              <input type=\"hidden\" id=\"fix-focus\" />\n            </div>\n            <div className=\"actions\">\n              <input type=\"button\" value=\"Execute\" onClick={this.handleCommandExec} />\n              <input type=\"button\" value=\"Clear\" onClick={this.handleCommandClear} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"game-file-select\">\n          <input type=\"file\" ref={this.fileInput} />\n          <input type=\"button\" value=\"Start\" onClick={() => this.handleFileSelect()} />\n        </div>\n        {this.state.loaded && this.renderGameUI()}\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}